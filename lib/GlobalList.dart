class GlobalLists {
  static List<String> multipleChildrenWidgets = [
    'Column', 'Row', 'Stack'
  ];

  static Map<String, List<String>> knownChildren = {
    'GestureDetector': ['RawGestureDetector', '_GestureSemantics', 'Listener'],
    'Container': ['ColoredBox', 'LimitedBox', 'ConstrainedBox', 'DecoratedBox'],
    'IconButton': [
      'Semantics',
      'InkResponse',
      '_InkResponseStateWidget',
      '_ParentInkResponseProvider',
      'Actions',
      '_ActionsMarker',
      'Focus',
      '_FocusMarker',
      'Semantics',
      'MouseRegion',
      '_RawMouseRegion',
      'Semantics',
      'GestureDetector',
      'ConstrainedBox',
      'Padding',
      'SizedBox',
      'Align',
      'Builder',
      'IconTheme',
      'RawGestureDetector',
      'Listener',
    ],
    'Icon': ['ExcludeSemantics', 'Center', 'RichText', 'Semantics', 'SizedBox'],
    'Spacer': ['Expanded', 'SizedBox.shrink',],
    'SingleChildScrollView': [
      'PrimaryScrollController',
      'Scrollable',
      'Scrollbar',
      '_MaterialScrollbar',
      'NotificationListener<ScrollNotification>',
      'RepaintBoundary',
      'RawGestureDetector',
      '_GestureSemantics',
      'Listener',
      'MouseRegion',
      '_RawMouseRegion',
      'CustomPaint',
      'RepaintBoundary',
      '_ScrollSemantics',
      '_ScrollableScope',
      'IgnorePointer',
      '_SingleChildViewport',
      'Semantics',
    ],
    'SelectableText': [
      'Semantics',
      'TextSelectionGestureDetector',
      'RawGestureDetector',
      'Listener',
      'RepaintBoundary',
      'EditableText',
      'MouseRegion',
      '_RawMouseRegion',
      'MouseRegion',
      '_RawMouseRegion',
      'Scrollable',
      'Scrollbar',
      '_MaterialScrollbar',
      'NotificationListener<ScrollNotification>',
      'RepaintBoundary',
      '_GestureSemantics',
      'CustomPaint',
      '_ScrollableScope',
      'IgnorePointer',
      'CompositedTransformTarget',
      '_Editable',
    ],
    'AppBar': [
      'Semantics',
      'AnnotatedRegion<SystemUiOverlayStyle>',
      'Material',
      'AnimatedPhysicalModel',
      'PhysicalModel',
      'NotificationListener<LayoutChangedNotification>',
      '_InkFeatures',
      'AnimatedDefaultTextStyle',
      'DefaultTextStyle',
      'Align',
      'SafeArea',
      'Padding',
      'MediaQuery',
      'ClipRect',
      'CustomSingleChildLayout',
      'Builder',
      'IconTheme',
      'DefaultTextStyle',
      'NavigationToolbar',
      'CustomMultiChildLayout',
    ],
    'ElevatedButton': [
      'Semantics',
      '_InputPadding',
      'ConstrainedBox',
      'Material',
      '_MaterialInterior',
      'PhysicalShape',
      '_ShapeBorderPaint',
      'CustomPaint',
      'NotificationListener<LayoutChangedNotification>',
      '_InkFeatures',
      'AnimatedDefaultTextStyle',
      'DefaultTextStyle',
      'InkWell',
      '_InkResponseStateWidget',
      '_ParentInkResponseProvider',
      'Actions',
      '_ActionsMarker',
      'Focus',
      '_FocusMarker',
      'MouseRegion',
      '_RawMouseRegion',
      'GestureDetector',
      'RawGestureDetector',
      'Builder',
      'IconTheme',
      'Padding',
      'Align',
      'Listener',
    ],
    'FlutterLogo': [
      'AnimatedContainer',
      'Container',
      'Padding',
    ],
    'Image': [
      'Stack',
      'Positioned',
      'Placeholder',
      'LimitedBox',
      'CustomPaint',
      'Padding',
      'FittedBox',
      'Text',
      'RichText',
    ],
    'Placeholder': [
      'LimitedBox',
      'CustomPaint',
    ],
    'Text': [
      'RichText',
    ],
    'ExcludeSemantics': [],
    'MergeSemantics': [],
    'Semantics': [],
    'StreamBuilder': [],
    'FutureBuilder': [],
    'AnimatedContainer': [
      'Container',
      'Align',
    ],
    'AnimatedBuilder': [],
    'AnimatedAlign': [
      'Align',
    ],
    'AnimatedCrossFade': [
      'ClipRect',
      'AnimatedSize',
      '_AnimatedSize',
      'Stack',
      'Positioned',
      'TickerMode',
      '_EffectiveTickerMode',
      'ExcludeSemantics',
      'FadeTransition',
    ],
    'AnimatedDefaultTextStyle': [
      'DefaultTextStyle',
    ],
    'AnimatedModalBarrier': [
      'ModalBarrier',
      'BlockSemantics',
      'ExcludeSemantics',
      '_ModalBarrierGestureDetector',
      'RawGestureDetector',
      '_GestureSemantics',
      'MouseRegion',
      '_RawMouseRegion',
      'ColoredBox',
    ],
    'AnimatedOpacity': [
      'FadeTransition',
    ],
    'AnimatedPhysicalModel': [
      'PhysicalModel',
    ],
    'AnimatedPositioned': [
      'Container',
      'Positioned',
    ],
    'AnimatedSize': [
      '_AnimatedSize',
    ],
    'Hero': [
      'SizedBox',
      'Offstage',
      'TickerMode',
      '_EffectiveTickerMode',
      'KeyedSubtree',
    ],
    'DefaultTextStyle': [
      'Semantics',
      'Listener',
      'ConstrainedBox',
    ],
    'RichText': [],
    'Padding': [],
    'MediaQuery': [],
  };
}